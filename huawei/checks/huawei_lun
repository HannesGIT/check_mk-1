#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2016 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#
# LUN
#

def parse_huawei_lun(info):
    luninfo = {}
    for line in info[0]:
        luninfo[line[0]] = line[1:]
    for line in info[1]:
        luninfo[line[0]] += line[1:]
    return luninfo

def inventory_huawei_lun(parsed):
    for item in parsed:
        yield item, {}

def check_huawei_lun(item, params, parsed):
    states = {
        '1': 'normal',
        '2': 'fault',
        '3': 'notformat',
        '4': 'formatting',
    }
    if item in parsed:
        res = 0
        msg = 'WWN: %s; pool: %s; state: %s' % (parsed[item][0], parsed[item][11], states[parsed[item][1]])
        if parsed[item][1] == '2':
            res = 2
            msg += '(!!)'
        elif parsed[item][1] in ['3', '4']:
            res = 1
            msg += '(!)'
        read_bytes_per_sec = saveint(parsed[item][7]) * 1024 * 1024
        write_bytes_per_sec = saveint(parsed[item][8]) * 1024 * 1024
        iops = saveint(parsed[item][4]) + saveint(parsed[item][5])
        perfdata = [ ( 'read', read_bytes_per_sec ),
                     ( 'write', write_bytes_per_sec ),
                     ( 'ios', iops ),
                 ]
        msg += "; read %s/sec, write %s/sec, IOPS total %s/sec" % (get_bytes_human_readable(read_bytes_per_sec),
                                                                   get_bytes_human_readable(write_bytes_per_sec),
                                                                   iops)
        capacity = saveint(parsed[item][12]) * 1024 * 1024
        perfdata.append( ( 'capacity', "%sB" % capacity ) )
        msg += "; capacity: %s" % get_bytes_human_readable(capacity)

        return (res, msg, perfdata)

check_info['huawei_lun'] = {
    'inventory_function'    : inventory_huawei_lun,
    'check_function'        : check_huawei_lun,
    'parse_function'        : parse_huawei_lun,
    'service_description'   : 'LUN %s',
    'has_perfdata'          : True,
    'snmp_info'             : [ ( '.1.3.6.1.4.1.34774.4.1', [ '19.9.4.1.2',  # hwStorageLunName            
                                                              '19.9.4.1.3',  # hwStorageLunWWN             0
                                                              '19.9.4.1.11', # hwStorageLunStatus          1
                                                              '21.4.1.2',    # hwPerfLunHitRate            2
                                                              '21.4.1.3',    # hwPerfLunTotalIOPS          3
                                                              '21.4.1.4',    # hwPerfLunReadIOPS           4
                                                              '21.4.1.5',    # hwPerfLunWriteIOPS          5
                                                              '21.4.1.6',    # hwPerfLunTotalTraffic       6
                                                              '21.4.1.7',    # hwPerfLunReadTraffic        7
                                                              '21.4.1.8',    # hwPerfLunWriteTraffic       8
                                                              '21.4.1.9',    # hwPerfLunReadIORate         9
                                                              '21.4.1.10',   # hwPerfLunWriteIORate        10
                                                          ], ),
                                ( '.1.3.6.1.4.1.34774.4.1.23.4.8.1', [ '2',  # hwInfoLunName
                                                                       '4',  # hwInfoLunPoolName           11
                                                                       '5',  # hwInfoLunCapacity           12
                                                                       '6',  # hwInfoLunSubscribedCapacity 13
                                                                       '8',  # hwInfoLunSectorSize         14
                                                                   ] ),
                            ],
    'snmp_scan_function'    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == '.1.3.6.1.4.1.2011.2.91',
}

