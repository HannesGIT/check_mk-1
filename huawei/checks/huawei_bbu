#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2016 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#
# BBU with lifetime check
#

def inventory_huawei_bbu(info):
    for line in info:
        yield line[0], { 'runningStatus': line[2] }

def check_huawei_bbu(item, params, info):
    import datetime
    bbu_lifetime = datetime.timedelta(2880) # days
    for line in info:
        if line[0] == item:
            res = 0
            deliveredon = map(saveint, line[3].split('-'))
            if len(deliveredon) == 3:
                deliverydate = datetime.date(deliveredon[0], deliveredon[1], deliveredon[2])
                daysleft = (deliverydate + bbu_lifetime - datetime.date.today()).days
                msg = 'Delivery Date: %s, %d Days left' % (deliverydate.isoformat(), daysleft)
                perfdata = [ ( 'daysleft', daysleft ) ]
            else:
                res = 1
                msg = 'unable to get delivery date from %s(!)' % line[3]
                perfdata = []
            msg += '; health %s' % huawei_health_states[line[1]]
            if line[1] != '1':
                res = 2
                msg += '(!!)'
            msg += '; state %s' % huawei_running_states[line[2]]
            if line[2] != params['runningStatus']:
                res = 2
                msg += ', changed from %s(!!)' % huawei_running_states[params['runningStatus']]                
            return res, msg, perfdata

check_info['huawei_bbu'] = {
    'inventory_function'    : inventory_huawei_bbu,
    'check_function'        : check_huawei_bbu,
    'service_description'   : 'BBU %s',
    'has_perfdata'          : True,
    'snmp_info'             : ( '.1.3.6.1.4.1.34774.4.1.23.5.5.1', [ '2',  # hwInfoBBULocation
                                                                     '3',  # hwInfoBBUHealthStatus
                                                                     '4',  # hwInfoBBURunningStatus
                                                                     '9',  # hwInfoBBUDeliveredOn
                                  ] ),
    'snmp_scan_function'    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == '.1.3.6.1.4.1.2011.2.91',
    'includes'              : [ 'huawei.include' ],
}
